{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: The name of the added product does not match the expected name", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x7ff2cabb7550>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"79685fdf0e7f24731d51c10291d0fea3\")>, promo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\", \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        promo_link = self.link_promo_product_base + promo_offer\n        page = ProductPage(browser, promo_link)\n        page.open()\n        product_name = page.get_product_name()\n        product_price = page.get_product_price()\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n>       page.check_name_of_added_product(product_name)\n\nmodule_5/test_product_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.product_page.ProductPage object at 0x7ff2cabbfee0>, name = 'Coders at Work'\n\n    def check_name_of_added_product(self, name):\n>       assert name == self.browser.find_element(*ProductPageLocators.ALERT_PRODUCT_NAME).text, \\\n            \"The name of the added product does not match the expected name\"\nE       AssertionError: The name of the added product does not match the expected name\n\nmodule_5/pages/product_page.py:19: AssertionError"}, "attachments": [{"name": "stdout", "source": "afd81bb4-261c-48b7-adc7-9b25067c88bc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1625393358079, "stop": 1625393361947, "uuid": "2bb2097e-8098-4d2b-b2dc-38a1f6628c6c", "historyId": "8433857a769ecd2ca3eba03399b040cb", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "lulavm"}, {"name": "thread", "value": "24749-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}